import React from 'react';

class ImageCard extends React.Component{
    
    constructor(props){
        super(props);
        this.state = { spans: 0 };
        //This is how we create a reference we call React.createRef
        // Then we assign it to some instance variable that we
        // can refer back to it later on inside of our class
        this.imageRef = React.createRef();
    }

    componentDidMount(){
        // We are going to listen for the event load any time
        // when an image is download succesfully, emits a 'load' event

        //2nd argument is a callback
        this.imageRef.current.addEventListener('load', this.setSpans);
    }

    setSpans = () =>{
        const height = this.imageRef.current.clientHeight;
        const spans = Math.ceil(height / 10);

        this.setState( {spans})
    }



    render(){
        
        const { description, urls } = this.props.image
        
        return(
            <div style={{gridRowEnd: `span ${this.state.spans}`}}>
                <img 
                //remember:-- THIS IS A JSX Tag, not a DOM element
                // This JSX Tag is going to be eventually turned into a DOM element
                // but we don't have any good way of somehow getting a handle on the DOM Element that is being produced
                // by this very specific image tag 

                //The ref system is how we somehow get a handle on some particular element that is generated by a tag

                    alt={description}
                    src={urls.regular}
                    ref={this.imageRef} 
                    //Wire up a ref. 
                    // Now any place inside this component that
                    // we want to , we can reference this image ref and it will te
                    // us a little bit about this image DOM node

                />
            </div>
        );
    }
}

export default ImageCard;